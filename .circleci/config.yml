---
executors:
  membershipsite-executors:
    docker:
      - image: cimg/ruby:3.3.5-browsers
        environment:
          PGHOST: localhost
          PGUSER: london-decom-membership
          RAILS_ENV: test
      - image: cimg/postgres:14.6
        environment:
          POSTGRES_USER: london-decom-membership
          POSTGRES_DB: london-decom-membership_test
          POSTGRES_PASSWORD: password
    resource_class: small
  base-image:
    docker:
      - image: cimg/base:2025.10
    resource_class: small

version: 2.1
jobs:
  build-and-test:
    executor: membershipsite-executors
    working_directory: ~/london-decom-membership
    steps:
      - checkout

      - restore_cache:
          name: Restore bundle cache
          key: london-decom-membership-{{ checksum "Gemfile.lock" }}

      - run:
          name: Bundle install dependencies
          command: bundle install --path vendor/bundle

      - save_cache:
          name: Store bundle cache
          key: london-decom-membership-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: Setup the environment
          command: cp .sample.env .env

      - run:
          name: Setup the database
          command: bundle exec rake db:setup

      - run:
          name: Run the tests
          command: bundle exec rake

  deploy:
    executor: base-image
    working_directory: ~/london-decom-membership
    steps:
      - checkout
      - run:
          name: Deploy to fly
          command: |
                curl -L https://fly.io/install.sh | sh
                export FLYCTL_INSTALL="/home/circleci/.fly"
                export PATH="$FLYCTL_INSTALL/bin:$PATH"
                flyctl deploy -e GIT_SHA="$CIRCLE_SHA1" -e GIT_AUTHOR="$CIRCLE_USERNAME"
      - run:
          name: Notify Rollbar
          command: |
            curl --request POST \
            --url https://api.rollbar.com/api/1/deploy \
            --header "X-Rollbar-Access-Token: $ROLLBAR_ACCESS_TOKEN" \
            --header 'accept: application/json' \
            --header 'content-type: application/json' \
            --data '{
              "environment": "production",
              "revision": "'"$CIRCLE_SHA1"'",
              "rollbar_username": "'"$ROLLBAR_USERNAME"'",
              "local_username": "'"$CIRCLE_USERNAME"'",
              "comment": "Deploy with bug"
            }'

workflows:
  build-test-deploy:
    jobs:
      - build-and-test
      - deploy:
          requires:
            - build-and-test
          filters:
            tags:
              only: /^v.*/